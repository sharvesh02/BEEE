// High Pass Filter Using Digital Filter Transformation
clear; 
clc; 
close all; 

// Define the analog filter transfer function H(s)
s = poly(0, 's'); 
Omegac = 0.2 * %pi; 
H = Omegac / (s + Omegac); 

// Sampling period
T = 1; // Sampling period T = 1 Second 

// Digital Low-Pass Filter (LPF) using bilinear transformation
z = poly(0, 'z'); 
Hz_LPF = horner(H, (2 / T) * ((z - 1) / (z + 1))); 

// Transformation to High-Pass Filter (HPF)
alpha = -cos(Omegac) / (1 + cos(Omegac)); // HPF transformation coefficient
HZ_HPF = horner(Hz_LPF, -(z + alpha) / (1 + alpha * z)); 

// Frequency response of the HPF
HW = frmag(HZ_HPF(2), HZ_HPF(3), 512); 
W = 0:%pi / 511:%pi; 

// Plot the magnitude response
plot(W / %pi, HW); 
a = gca(); 
a.thickness = 3; 
a.foreground = 1; 
a.font_style = 9;  
xgrid(1); 

// Add title and axis labels
xtitle('Magnitude Response of Single Pole HPF Filter (Cutoff frequency = 0.2*\pi)', ...
       'Digital Frequency --->', ...
       'Magnitude'); 

// Display the digital HPF transfer function
disp("HZ_HPF", HZ_HPF); 
